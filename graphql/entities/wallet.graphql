extend type Query @guard {

    "Get a paginated mix of all the authenticated user's transactions and point transactions"
    GetTransactions: [TransactionOrPointTransaction] @field(resolver: "UserQuery@GetTransactions")

    "Get a single transaction by UUID"
    GetSingleTransaction(uuid: String!): Transaction @field(resolver: "UserQuery@GetSingleTransaction")

    "Get a single point transaction by UUID"
    GetSinglePointTransaction(uuid: String!): PointTransaction @field(resolver: "UserQuery@GetSinglePointTransaction")

    "Get a paginated list of beneficiaries for the authenticated user"
    GetBeneficiaries: [Beneficiary] @field(resolver: "WalletQuery@GetBeneficiaries")

    "Get the currently supported on-ramp currencies"
    GetOnRampCurrencies: [String] @field(resolver: "UserQuery@GetOnRampCurrencies")

    "Search users by a query string"
    SearchUsers: [User] @field(resolver: "UserQuery@SearchUsers")

    "Get a paginated list of notifications for the authenticated user"
    GetNotifications: [Notification] @field(resolver: "UserQuery@GetNotifications")

    "Get the current exchange rate between two currencies"
    GetExchangeRate: Float @field(resolver: "UserQuery@GetExchangeRate")
}
