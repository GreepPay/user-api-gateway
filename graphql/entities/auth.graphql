# Auth Queries
extend type Query {
    "Get the authenticated user with wallet and profile info"
    GetAuthUser: User @field(resolver: "UserQuery@GetAuthUser")

}

# Auth mutations
extend type Mutation {
    "Sign up a new user"
    SignUp(
        email: String!
        password: String!
        username: String
        type: String!
    ): User! @field(resolver: "AuthMutator@signUp")

    "Sign in a user"
    SignIn(
        email: String!
        password: String!
    ): AuthResponse! @field(resolver: "AuthMutator@signIn")

    "Verify user email using OTP"
    VerifyEmailOTP(
        email: String!
        otp: String!
    ): User! @field(resolver: "AuthMutator@verifyEmailOTP")

    "Resend verification email to user"
    ResendVerifyEmail(
        user_uuid: String!
    ): Boolean! @field(resolver: "AuthMutator@resendVerifyEmail")

    "Send reset password email to user"
    SendResetPasswordEmail(
        email: String!
    ): Boolean! @field(resolver: "AuthMutator@sendResetPasswordEmail")

    "Update user password"
    UpdatePassword(
        user_uuid: String!
        password: String!
        old_password: String!
        otp: String
    ): Boolean! @field(resolver: "AuthMutator@updatePassword")

    "Sign out the authenticated user"
    SignOut: Boolean! @field(resolver: "AuthMutator@signOut")
}
