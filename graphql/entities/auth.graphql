# Auth Queries
extend type Query {
    "Get the authenticated user with wallet and profile info"
    GetAuthUser: User @field(resolver: "UserQuery@GetAuthUser")
}

# Auth mutations
extend type Mutation {
    "Sign up a new user"
    SignUp(
        first_name: String!
        last_name: String!
        email: String!
        password: String!
        state: String!
        country: String!
        default_currency: String!
    ): User! @field(resolver: "AuthMutator@signUp")

    "Sign in a user"
    SignIn(email: String!, password: String!): Boolean!
        @field(resolver: "AuthMutator@signIn")

    "Verify user email using OTP"
    VerifyEmailOTP(email: String!, otp: String!): User!
        @field(resolver: "AuthMutator@verifyEmailOTP")

    "send rest password pin "
    SendResetPasswordPin(email: String!): Boolean!
        @field(resolver: "AuthMutator@SendResetPasswordPin")

    "Resend email OTP"
    ResendEmailOTP(email: String!): Boolean!
        @field(resolver: "AuthMutator@resendEmailOTP")

    "Verify user identity"
    VerifyIdentity(
        user_uuid: String!
        id_number: String!
        id_country: String!
        id_type: String!
    ): User @field(resolver: "AuthMutator@VerifyIdentity")

    "reset password for user"
    ResetPassword(
        user_uuid: String!
        otp_code: String!
        new_password: String!
    ): Boolean! @field(resolver: "AuthMutator@resetPassword")

    "Update user password"
    UpdatePassword(
        user_uuid: String!
        password: String!
        old_password: String!
        otp: String
    ): Boolean! @field(resolver: "AuthMutator@updatePassword")
}
